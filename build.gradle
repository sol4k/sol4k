plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
    id 'org.jetbrains.dokka' version '1.7.20'
    id 'com.vanniktech.maven.publish' version '0.24.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.10'
    id 'org.jlleitschuh.gradle.ktlint' version '11.1.0'
}

group = 'org.sol4k'
version = "$currentVersion"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'
    implementation 'org.sol4k:tweetnacl:0.1.6'
    implementation 'org.bitcoinj:bitcoinj-core:0.16.2'

    testImplementation 'org.jetbrains.kotlin:kotlin-test'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        languageVersion = '1.4'
        apiVersion = '1.4'
    }
}

kotlin {
    jvmToolchain(8)
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Runs the integration tests.'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    testLogging.showStandardStreams = true
    mustRunAfter tasks.test
}

mavenPublishing {
    publishToMavenCentral(com.vanniktech.maven.publish.SonatypeHost.S01, true)
    signAllPublications()

    coordinates('org.sol4k', 'sol4k', "$currentVersion")

    pom {
        name = 'sol4k'
        description = 'Kotlin, JVM, and Android client for Solana'
        inceptionYear = '2023'
        url = 'https://sol4k.org'
        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }
        developers {
            developer {
                id = 'shpota'
                name = 'Sasha Shpota'
                url = 'https://github.com/shpota/'
            }
        }
        scm {
            url = 'https://github.com/sol4k/sol4k/'
            connection = 'scm:git:git://github.com/sol4k/sol4k.git'
            developerConnection = 'scm:git:ssh://git@github.com/sol4k/sol4k.git'
        }
    }
}
